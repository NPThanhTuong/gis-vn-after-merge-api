// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using gis_vn_after_merge_api.Data;

#nullable disable

namespace gis_vn_after_merge_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251002094325_ChangeColumnDataTypeToGeometry")]
    partial class ChangeColumnDataTypeToGeometry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("gis_vn_after_merge_api.Models.Commune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("double precision")
                        .HasColumnName("area");

                    b.Property<Geometry>("Boundary")
                        .IsRequired()
                        .HasColumnType("geometry")
                        .HasColumnName("boundary");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer")
                        .HasColumnName("legacy_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<int>("Population")
                        .HasColumnType("integer")
                        .HasColumnName("population");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("integer")
                        .HasColumnName("province_id");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("communes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = 9.1999999999999993,
                            Boundary = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.81 21.03, 105.83 21.03, 105.83 21.05, 105.81 21.05, 105.81 21.03))"),
                            LegacyId = 1001,
                            Name = "Ba Đình",
                            Population = 230000,
                            ProvinceId = 1
                        },
                        new
                        {
                            Id = 2,
                            Area = 7.7000000000000002,
                            Boundary = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((106.7 10.77, 106.72 10.77, 106.72 10.79, 106.7 10.79, 106.7 10.77))"),
                            LegacyId = 2001,
                            Name = "Quận 1",
                            Population = 142000,
                            ProvinceId = 2
                        });
                });

            modelBuilder.Entity("gis_vn_after_merge_api.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Geometry>("Boundary")
                        .IsRequired()
                        .HasColumnType("geometry")
                        .HasColumnName("boundary");

                    b.Property<int>("LegacyId")
                        .HasColumnType("integer")
                        .HasColumnName("legacy_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("provinces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Boundary = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((105.8 21, 105.9 21, 105.9 21.1, 105.8 21.1, 105.8 21))"),
                            LegacyId = 0,
                            Name = "Hà Nội"
                        },
                        new
                        {
                            Id = 2,
                            Boundary = (NetTopologySuite.Geometries.Polygon)new NetTopologySuite.IO.WKTReader().Read("SRID=4326;POLYGON ((106.6 10.7, 106.8 10.7, 106.8 10.9, 106.6 10.9, 106.6 10.7))"),
                            LegacyId = 0,
                            Name = "Hồ Chí Minh"
                        });
                });

            modelBuilder.Entity("gis_vn_after_merge_api.Models.Commune", b =>
                {
                    b.HasOne("gis_vn_after_merge_api.Models.Province", "Province")
                        .WithMany("Communes")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("gis_vn_after_merge_api.Models.Province", b =>
                {
                    b.Navigation("Communes");
                });
#pragma warning restore 612, 618
        }
    }
}
